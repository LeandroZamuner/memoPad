{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","ListIcons/To_do_List.tsx","ListIcons/Close.tsx","TodoItem/index.js","CreateTodoButton/index.js","Modal/index.js","TodoForm/index.js","TodosError/index.js","TodosLoading/index.js","App/AppUI.js","App/index.js","reportWebVitals.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","addTodo","push","children","Consumer","TodoCounter","useContext","className","TodoSearch","onChange","event","console","log","target","TodoList","ToDo","xmlns","height","viewBox","width","fill","d","Close","TodoItem","onClick","onComplete","onDelete","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","placeholder","type","TodosError","TodosLoading","AppUI","Fragment","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.09d8ef10.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useLocalStorage } from './useLocalStorage'\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider(props) {\r\n    const {\r\n        item: todos,\r\n        saveItem: saveTodos,\r\n        loading,\r\n        error,\r\n    } = useLocalStorage('TODOS_V1', []);\r\n    const [searchValue, setSearchValue] = React.useState('');\r\n    const [openModal, setOpenModal] = React.useState(false);\r\n    const completedTodos = todos.filter(todo => !!todo.completed).length;\r\n    const totalTodos = todos.length;\r\n\r\n    let searchedTodos = [];\r\n\r\n    if (!searchValue.length >= 1) {\r\n        searchedTodos = todos;\r\n    } else {\r\n        searchedTodos = todos.filter(todo => {\r\n            const todoText = todo.text.toLowerCase();\r\n            const searchText = searchValue.toLowerCase();\r\n            return todoText.includes(searchText);\r\n        });\r\n    }\r\n    const addTodo = (text) => {\r\n\r\n        const newTodos = [...todos];\r\n        newTodos.push({\r\n            completed: false,\r\n            text,\r\n        });\r\n        saveTodos(newTodos);\r\n    };\r\n\r\n\r\n    const completeTodo = (text) => {\r\n        const todoIndex = todos.findIndex(todo => todo.text === text);\r\n        const newTodos = [...todos];\r\n        newTodos[todoIndex].completed = true;\r\n        saveTodos(newTodos);\r\n    };\r\n\r\n\r\n    const deleteTodo = (text) => {\r\n        const todoIndex = todos.findIndex(todo => todo.text === text);\r\n        const newTodos = [...todos];\r\n        newTodos.splice(todoIndex, 1);\r\n        saveTodos(newTodos);\r\n    };\r\n\r\n\r\n    return (\r\n        <TodoContext.Provider value={{\r\n            error,\r\n            loading,\r\n            totalTodos,\r\n            completedTodos,\r\n            searchValue,\r\n            setSearchValue,\r\n            searchedTodos,\r\n            completeTodo,\r\n            deleteTodo,\r\n            openModal,\r\n            setOpenModal,\r\n            addTodo,\r\n        }}>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    );\r\n}\r\nexport { TodoContext, TodoProvider }\r\n\r\n\r\n<TodoContext.Consumer></TodoContext.Consumer>","import React from \"react\";\r\n\r\nfunction useLocalStorage(itemName, initialValue) {\r\n    const [error, setError] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [item, setItem] = React.useState(initialValue);\r\n\r\n    React.useEffect(() => {\r\n        setTimeout(() => {\r\n            try {\r\n                const localStorageItem = localStorage.getItem(itemName);\r\n                let parsedItem;\r\n\r\n                if (!localStorageItem) {\r\n                    localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n                    parsedItem = initialValue;\r\n                } else {\r\n                    parsedItem = JSON.parse(localStorageItem);\r\n                }\r\n\r\n                setItem(parsedItem)\r\n                setLoading(false);\r\n            } catch (error) {\r\n                setError(error);\r\n            }\r\n\r\n\r\n        }, 1000);\r\n    });\r\n\r\n    const saveItem = (newItem) => {\r\n        try {\r\n            const stringifiedItem = JSON.stringify(newItem);\r\n            localStorage.setItem(itemName, stringifiedItem);\r\n            setItem(newItem);\r\n        } catch (error) {\r\n            setError(error);\r\n        }\r\n    };\r\n\r\n    return {\r\n        item,\r\n        saveItem,\r\n        loading,\r\n        error,\r\n    };\r\n}\r\n\r\nexport { useLocalStorage }","import React from \"react\";\r\nimport { TodoContext } from \"../TodoContext\";\r\nimport './TodoCounter.css';\r\n\r\nfunction TodoCounter() {\r\n    const { totalTodos, completedTodos } = React.useContext(TodoContext);\r\n    return (\r\n        <h2 className=\"TodoCounter\">You have completed {completedTodos} of {totalTodos} task to do</h2>\r\n    )\r\n}\r\nexport { TodoCounter };","import React from \"react\";\r\nimport { TodoContext } from \"../TodoContext\";\r\nimport \"./TodoSearch.css\";\r\n\r\n/*  class componente extends React.Component {\r\n    constructor() {\r\n        this.state = {\r\n            patito: 'juan'\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div onClick={() => this.setState('Enrique')}>{this.state.patito}</div>\r\n        )\r\n    }\r\n}*/\r\n\r\nfunction TodoSearch() {\r\n  const { searchValue, setSearchValue } = React.useContext(TodoContext);\r\n\r\n  const onSearchValueChange = (event) => {\r\n    console.log(event.target.value);\r\n    setSearchValue(event.target.value);\r\n  };\r\n\r\n  return [\r\n    <input\r\n      className=\"TodoSearch\"\r\n      aria-label=\"Search\"\r\n      onChange={onSearchValueChange}\r\n      value={searchValue}\r\n    />,\r\n  ];\r\n}\r\n\r\nexport { TodoSearch };\r\n","import React from \"react\";\r\nimport './TodoList.css'\r\n\r\nfunction TodoList(props) {\r\n    return (\r\n        <section>\r\n            <ul>\r\n                {props.children}\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\nexport { TodoList };","import React from \"react\";\r\n\r\nconst ToDo = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\" />\r\n  </svg>\r\n);\r\n\r\nexport default ToDo;\r\n","import React from \"react\";\r\n\r\nconst Close = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    height=\"24px\"\r\n    viewBox=\"0 0 24 24\"\r\n    width=\"24px\"\r\n    fill=\"#000000\"\r\n  >\r\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n    <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\" />\r\n  </svg>\r\n);\r\n\r\nexport default Close;\r\n","import React from \"react\";\r\nimport \"./TodoItem.css\";\r\n//Icons\r\nimport ToDo from \"../ListIcons/To_do_List\";\r\nimport Close from \"../ListIcons/Close\";\r\n\r\nfunction TodoItem(props) {\r\n  return (\r\n    <li className=\"TodoItem\">\r\n      {/*   <p className={`TodoItem-p ${props.completed && \"TodoItem-p--completed\"}`}>\r\n        \r\n  </p> */}\r\n      {props.text}\r\n      <div className=\"container\">\r\n        <span\r\n          className={`Icon Icon-check ${\r\n            props.completed && \"Icon-check--active\"\r\n          }`}\r\n          onClick={props.onComplete}\r\n        >\r\n          <ToDo />\r\n        </span>\r\n\r\n        <span className=\"Icon Icon-delete\" onClick={props.onDelete}>\r\n          <Close />\r\n        </span>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\nexport { TodoItem };\r\n","import React from \"react\";\r\nimport './CreateTodoButton.css';\r\nfunction CreateTodoButton(props) {\r\n    const onClickButton = () => {\r\n\r\n        props.setOpenModal(prevState => !prevState);\r\n    }\r\n\r\n    return (\r\n        <button className=\"CreateTodoButton\"\r\n            onClick={onClickButton}>+</button>\r\n\r\n    )\r\n}\r\nexport { CreateTodoButton };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Modal.css';\r\n\r\nfunction Modal({ children }) {\r\n    return ReactDOM.createPortal(\r\n        <div className=\"ModalBackground\">\r\n            {children}\r\n        </div>,\r\n        document.getElementById('modal')\r\n    );\r\n}\r\n\r\nexport { Modal };","import React from \"react\";\r\nimport { TodoContext } from \"../TodoContext\";\r\nimport \"./TodoForm.css\";\r\n\r\nfunction TodoForm() {\r\n  const [newTodoValue, setNewTodoValue] = React.useState(\"\");\r\n  const { addTodo, setOpenModal } = React.useContext(TodoContext);\r\n\r\n  const onChange = (event) => {\r\n    setNewTodoValue(event.target.value);\r\n  };\r\n\r\n  const onCancel = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    addTodo(newTodoValue);\r\n    setOpenModal(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <label>Write your new task</label>\r\n      <textarea\r\n        value={newTodoValue}\r\n        onChange={onChange}\r\n        placeholder=\"Enter a new task\"\r\n      />\r\n      <div>\r\n        <button\r\n          className=\"TodoForm-buttonContainer\"\r\n          type=\"button\"\r\n          onClick={onCancel}\r\n          className=\"TodoForm-button TodoForm-button--cancel\"\r\n        >\r\n          Cancel\r\n        </button>\r\n\r\n        <button className=\"TodoForm-button TodoForm-button--add\" type=\"submit\">\r\n          Add\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport { TodoForm };\r\n","import React from \"react\";\r\n\r\nfunction TodosError({ error }) {\r\n    return <p>Desesperate, Hubo un error...;</p>;\r\n}\r\n\r\nexport { TodosError };","import React from \"react\";\r\nimport './TodosLoading.css';\r\n\r\nfunction TodosLoading() {\r\n    return (\r\n        <div className=\"LoadingTodo-container\">\r\n            <span className=\"LoadingTodo-completeIcon\"></span>\r\n            <p className=\"LoadingTodo-text\">Cargando TODOs...</p>\r\n            <span className=\"LoadingTodo-deleteIcon\"></span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { TodosLoading };","import React from \"react\";\r\nimport { TodoContext } from \"../TodoContext\";\r\nimport { TodoCounter } from \"../TodoCounter\";\r\nimport { TodoSearch } from \"../TodoSearch\";\r\nimport { TodoList } from \"../TodoList\";\r\nimport { TodoItem } from \"../TodoItem\";\r\nimport { CreateTodoButton } from \"../CreateTodoButton\";\r\nimport { Modal } from \"../Modal\";\r\nimport { TodoForm } from \"../TodoForm\";\r\n\r\n/// Import de carga////\r\n\r\nimport { TodosError } from \"../TodosError\";\r\nimport { TodosLoading } from \"../TodosLoading\";\r\n\r\nfunction AppUI() {\r\n  const {\r\n    error,\r\n    loading,\r\n    searchedTodos,\r\n    completeTodo,\r\n    deleteTodo,\r\n    openModal,\r\n    setOpenModal,\r\n  } = React.useContext(TodoContext);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TodoCounter />\r\n      <TodoSearch />\r\n\r\n      <TodoList>\r\n        {error && <TodosError />}\r\n        {loading && <TodosLoading />}\r\n\r\n        {searchedTodos.map((todo) => (\r\n          <TodoItem\r\n            key={todo.text}\r\n            text={todo.text}\r\n            completed={todo.completed}\r\n            onComplete={() => completeTodo(todo.text)}\r\n            onDelete={() => deleteTodo(todo.text)}\r\n          />\r\n        ))}\r\n      </TodoList>\r\n\r\n      {openModal && (\r\n        <Modal>\r\n          <TodoForm />\r\n        </Modal>\r\n      )}\r\n\r\n      <CreateTodoButton setOpenModal={setOpenModal} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport { AppUI };\r\n","import React from 'react';\nimport { AppUI } from './AppUI';\nimport { TodoProvider } from '../TodoContext';\n\n\nfunction App() {\n\n\n  return [\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  ];\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}